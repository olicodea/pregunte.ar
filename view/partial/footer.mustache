</main>
<footer class="text-white flex items-center justify-center w-full">
    <p class="text-center">2023 - Pregunte.ar - Programaci√≥n Web 2</p>
</footer>

{{> script }}

{{#ApiGoogleMaps}}
    <script src="https://maps.googleapis.com/maps/api/js?key={{ApiGoogleMaps}}&callback=initMap" async defer></script>
{{/ApiGoogleMaps}}

{{#ApiGoogleMapsPerfil}}
    <script src="https://maps.googleapis.com/maps/api/js?key={{ApiGoogleMapsPerfil}}&callback=perfilMapa" async defer></script>
{{/ApiGoogleMapsPerfil}}
<script>
    async function findRespuestas(idRespuesta) {
        return new Promise(function (resolve, reject) {
            $.ajax({
                url: '/preguntasSugeridas/findRespuestas&idRespuesta=' + idRespuesta,
                method: 'GET',
                success: function (response) {
                    resolve(response);
                },
                error: function (xhr, status, error) {
                    console.log('Error al enviar los datos al servidor');
                    reject(error);
                }
            });
        });
    }

    function insertarRespuestas(modalAnswers, respuestas) {
        Object.values(respuestas).forEach(respuesta => {
            const li = document.createElement("li");
            li.textContent = respuesta.respuesta;
            if(respuesta.esCorrecta) {
                li.textContent += " - " + "RESPUESTA CORRECTA";
            }
            modalAnswers.append(li);
        })
    }

    function cancelarModal(tipo) {
        const modal = document.getElementById(`modal-${tipo}`);
        modal.classList.add('hidden');
    }

    function mostrarNotificacion(mensaje, redirect) {
        const notificationElement = document.getElementById('notification');
        notificationElement.classList.remove("hidden");

        const notification = document.createElement('div');
        notification.classList.add('notification', 'bg-blue-500');
        notification.textContent = mensaje;

        notification.style.opacity = '0';
        notificationElement.append(notification);

        setTimeout(function () {
            notification.style.opacity = '1';
        }, 10);

        setTimeout(function () {
            notification.style.opacity = '0';
            setTimeout(function () {
                notification.remove();
                window.location.href = redirect;
            }, 300)
        }, 3000);
    }
</script>
{{#preguntas}}
    <script>
        async function mostrarModal(idPregunta, pregunta, usuario, idRespuesta) {
            const modal = document.getElementById('modal');
            modal.classList.remove('hidden');

            const modalTitle = document.getElementById('modal-title');
            modalTitle.textContent = `Pregunta sugerida por ${usuario}`;

            const modalQuestion = document.getElementById('modal-question');
            modalQuestion.textContent = pregunta;

            const modalAnswers = document.getElementById('modal-answers');
            modalAnswers.textContent = "";

            const inputIdPreguntaHidden = document.createElement("input");
            inputIdPreguntaHidden.type = "hidden";
            inputIdPreguntaHidden.id = "inputIdPreguntaHidden";
            inputIdPreguntaHidden.value = idPregunta;
            modalQuestion.append(inputIdPreguntaHidden);

            let respuestas = await findRespuestas(idRespuesta);
            insertarRespuestas(modalAnswers, respuestas);

            modal.addEventListener('click', function(event) {
                if (event.target === document.querySelector('.modal-overlay')) {
                    cancelarModal("sugeridas");
                }
            });
        }

         function aprobarPregunta() {
             const inputIdHidden = document.getElementById('inputIdPreguntaHidden');
             const idPregunta = inputIdHidden.value;
             const contenedorPregunta = document.getElementById(`contenedor-${idPregunta}`);

             return new Promise(function (resolve, reject) {
                 $.ajax({
                     url: '/preguntasSugeridas/aprobarPregunta',
                     method: 'POST',
                     data: {
                         idPregunta: idPregunta
                     },
                     success: function (response) {
                         if(response) {
                             contenedorPregunta.remove();
                             mostrarNotificacion('La pregunta se ha aprobado correctamente', '/preguntasSugeridas');
                         }
                     },
                     error: function (xhr, status, error) {
                         console.log('Error al enviar los datos al servidor');
                         reject(error);
                     }
                 });
                 cancelarModal("sugeridas");
             });
        }

        function rechazarPregunta() {
            const inputIdHidden = document.getElementById('inputIdPreguntaHidden');
            const idPregunta = inputIdHidden.value;
            const contenedorPregunta = document.getElementById(`contenedor-${idPregunta}`);

            return new Promise(function (resolve, reject) {
                $.ajax({
                    url: '/preguntasSugeridas/rechazarPregunta',
                    method: 'POST',
                    data: {
                        idPregunta: idPregunta
                    },
                    success: function (response) {
                        if(response) {
                            contenedorPregunta.remove();
                            mostrarNotificacion('La pregunta se ha rechazado correctamente', '/preguntasSugeridas');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log('Error al enviar los datos al servidor');
                        reject(error);
                    }
                });
                cancelarModal("sugeridas");
            });
        }
    </script>
{{/preguntas}}

{{#vistaPreguntasActivas}}
<script>
    window.addEventListener("resize", listarPreguntas);

    function mostrarPregunta(pregunta) {
        if(pregunta.length > 50) {
            return pregunta.slice(0, 50) + "...";
        } else {
            return pregunta;
        }
    }

    let contenedorPreguntas = document.querySelector("#contenedor-preguntas");
    const contenedorPreguntasGuardado = contenedorPreguntas.innerHTML;

    window.addEventListener("load", () => {
        listarPreguntas()
    })

    function listarPreguntas() {
        if( window.innerWidth <= 480 ) {
            Array.from(contenedorPreguntas.children).forEach(contenedorPregunta => {
                let pregunta = contenedorPregunta.children[0];
                contenedorPregunta.children[0].textContent = mostrarPregunta(pregunta.textContent);
            })
        } else {
            contenedorPreguntas.innerHTML = contenedorPreguntasGuardado;
        }
    }

    function editarPregunta(idPregunta) {

    }

    function abrirModalEliminarPregunta(idPregunta, pregunta) {
        const modal = document.getElementById('modal-eliminar');
        modal.classList.remove('hidden');

        const modalQuestion = document.getElementById('modal-eliminar-question');
        modalQuestion.textContent = pregunta;

        const inputIdPreguntaHidden = document.createElement("input");
        inputIdPreguntaHidden.type = "hidden";
        inputIdPreguntaHidden.id = "inputIdPreguntaHidden";
        inputIdPreguntaHidden.value = idPregunta;
        modalQuestion.append(inputIdPreguntaHidden);

        modal.addEventListener('click', function(event) {
            if (event.target === document.querySelector('.modal-overlay')) {
                cancelarModal("eliminar");
            }
        });
    }

    async function visualizarPregunta(idPregunta, pregunta, usuario, idRespuesta) {
        const modal = document.getElementById('modal-visualizar');
        modal.classList.remove('hidden');

        const modalTitle = document.getElementById('modal-visualizar-title');
        modalTitle.textContent = `Pregunta creada por ${usuario}`;

        const modalQuestion = document.getElementById('modal-visualizar-question');
        modalQuestion.textContent = pregunta;

        const modalAnswers = document.getElementById('modal-visualizar-answers');
        modalAnswers.textContent = "";

        let respuestas = await findRespuestas(idRespuesta);
        insertarRespuestas(modalAnswers, respuestas);

        modal.addEventListener('click', function(event) {
            if (event.target === document.querySelector('.modal-overlay')) {
                cancelarModal("visualizar");
            }
        });
    }

    function eliminarPregunta() {
        const inputIdHidden = document.getElementById('inputIdPreguntaHidden');
        const idPregunta = inputIdHidden.value;
        const contenedorPregunta = document.getElementById(`contenedor-${idPregunta}`);

        return new Promise(function (resolve, reject) {
            $.ajax({
                url: '/preguntasActivas/eliminarPregunta',
                method: 'POST',
                data: {
                    idPregunta: idPregunta
                },
                success: function (response) {
                    if(response) {
                        contenedorPregunta.remove();
                        mostrarNotificacion('La pregunta se ha eliminado correctamente', '/preguntasActivas');
                    }
                },
                error: function (xhr, status, error) {
                    console.log('Error al eliminar pregunta');
                    reject(error);
                }
            });
            cancelarModal("eliminar");
        });
    }

    contenedorPreguntas.addEventListener("click", function(event) {
        const target = event.target;
        if (target.classList.contains("modal-button") || target.classList.contains("icon")) {
            event.stopPropagation();

            if (target.dataset.action === "eliminar") {
                abrirModalEliminarPregunta(target.dataset.idPregunta, target.dataset.pregunta);

            }

            if(target.parentElement.dataset.action === "eliminar") {
                abrirModalEliminarPregunta(target.parentElement.dataset.idPregunta, target.parentElement.dataset.pregunta);
            }
        } else {
            const contenedorPregunta = target.closest(".preguntas");
            if (contenedorPregunta) {
                visualizarPregunta(
                        contenedorPregunta.dataset.idPregunta,
                        contenedorPregunta.dataset.pregunta,
                        contenedorPregunta.dataset.usuario,
                        contenedorPregunta.dataset.idRespuesta
                );
            }
        }
    });
</script>
{{/vistaPreguntasActivas}}
</body>
</html>